// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./mod.d.ts" />
var e=function(e){var r,t,n;if(0===(r=e.length))return 0;for(t=1,n=0;n<r;n++)t*=e[n];return t},r="function"==typeof Object.defineProperty?Object.defineProperty:null;var t=function(){try{return r({},"x",{}),!0}catch(e){return!1}},n=Object.defineProperty,o=Object.prototype,a=o.toString,u=o.__defineGetter__,i=o.__defineSetter__,l=o.__lookupGetter__,c=o.__lookupSetter__;var f=n,_=function(e,r,t){var n,f,_,p;if("object"!=typeof e||null===e||"[object Array]"===a.call(e))throw new TypeError("invalid argument. First argument must be an object. Value: `"+e+"`.");if("object"!=typeof t||null===t||"[object Array]"===a.call(t))throw new TypeError("invalid argument. Property descriptor must be an object. Value: `"+t+"`.");if((f="value"in t)&&(l.call(e,r)||c.call(e,r)?(n=e.__proto__,e.__proto__=o,delete e[r],e[r]=t.value,e.__proto__=n):e[r]=t.value),_="get"in t,p="set"in t,f&&(_||p))throw new Error("invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.");return _&&u&&u.call(e,r,t.get),p&&i&&i.call(e,r,t.set),e},p=t()?f:_;var v=function(e,r,t){var n,o,a,u,i;for(n=e.length,o=t,a=t,i=0;i<n;i++){if(0===e[i])return[t,t];(u=r[i])>0?a+=u*(e[i]-1):u<0&&(o+=u*(e[i]-1))}return[o,a]};(function(e,r,t){p(e,r,{configurable:!1,enumerable:!1,writable:!1,value:t})})(v,"assign",(function(e,r,t,n){var o,a,u,i,l;for(o=e.length,a=t,u=t,l=0;l<o;l++){if(0===e[l])return n[0]=t,n[1]=t,n;(i=r[l])>0?u+=i*(e[l]-1):i<0&&(a+=i*(e[l]-1))}return n[0]=a,n[1]=u,n}));var b=v;function y(r,t,n){var o,a;return 0!==(o=e(r))&&o===(a=b(r,t,n))[1]-a[0]+1}export{y as default};
//# sourceMappingURL=mod.js.map
